<Window x:Class="ToDoList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoList"
        mc:Ignorable="d"
        Title="ToDo" MinHeight="200" MinWidth="150" Height="400" 
        Width="300">
    <Window.DataContext>
        <local:ToDoVM/>
    </Window.DataContext>
    <Window.Resources>
        <ScaleTransform x:Key="mouseOverScale" ScaleX="1.1" ScaleY="1.1"/>
        <ScaleTransform x:Key="pressedScale" ScaleX="0.8" ScaleY="0.8"/>
        <Style x:Key="closeButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="templateBorder" BorderThickness="3" CornerRadius="5" 
                                BorderBrush="Gray" Margin="2" Background="White"
                                Height="20" Width="20" Padding="1,0,0,0">
                            <Viewbox>
                                <ContentPresenter>
                                    <ContentPresenter.Content>
                                        <Path Data="M 0 0 L 20 20 M 20 0 L 0 20" Stroke="Gray" StrokeThickness="3"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"></Condition>
                                    <Condition Property="IsPressed" Value="False"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="templateBorder" Property="Background" Value="IndianRed"/>
                                <Setter TargetName="templateBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterX="10" CenterY="10" ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="templateBorder" Property="Background" Value="DarkRed"/>
                                <Setter TargetName="templateBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterX="10" CenterY="10" ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="Gray" BorderThickness="3" 
                                    Grid.RowSpan="2" CornerRadius="5" Background="White">
                                <DockPanel >
                                    <Grid DockPanel.Dock="Top" MouseLeftButtonDown="Grid_MouseLeftButtonDown" Background="White">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Name="btClose" Style="{StaticResource closeButton}" Click="btCloseClick"></Button>
                                        </StackPanel>
                                    </Grid>
                                    <Line DockPanel.Dock="Top" Fill="Transparent" X1="0" Y1="0" Y2="0" X2="{TemplateBinding Property=Width}" 
                                          Stroke="Gray" StrokeThickness="3"></Line>
                                    <AdornerDecorator DockPanel.Dock="Bottom">
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Grid>
        <Grid.Resources>
            <Style x:Key="add-removeButton" TargetType="Button">
                <Setter Property="FontSize" Value="50"></Setter>
                <Setter Property="FontWeight" Value="ExtraBold"></Setter>
                <Setter Property="MaxHeight" Value="25"></Setter>
                <Setter Property="MaxWidth" Value="40"></Setter>
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Margin="5,1,5,1" MinWidth="30">
                                <Rectangle x:Name="templateRect" Fill="White"  RadiusX="10" 
                                           RadiusY="10" Stroke="Gray" 
                                           StrokeThickness="3"></Rectangle>
                                <Viewbox>
                                    <ContentPresenter Margin="5,5,5, 10" Content="{TemplateBinding Property=Button.Content}"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="templateRect" Property="Fill" Value="Gray"></Setter>
                                    <Setter Property="RenderTransform" Value="{StaticResource mouseOverScale}"/>
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="templateRect" Property="Fill" Value="DimGray"></Setter>
                                    <Setter Property="RenderTransform" Value="{StaticResource pressedScale}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style TargetType="TextBox" >
                <Setter Property="FontSize" Value="20"></Setter>
                <Setter Property="MaxHeight" Value="30"></Setter>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border Background="White" BorderBrush="Gray"
                                    BorderThickness="3">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"></ScrollViewer>
                                    <ContentPresenter/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">

                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="simpleList" TargetType="ListView" >
                <Setter Property="FontSize" Value="20"></Setter>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border Background="White" BorderBrush="Gray"
                                    BorderThickness="3">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"></ScrollViewer>
                                    <ContentPresenter/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">

                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBox Margin="10,5,5,5" Text="{Binding ToDoItem}"></TextBox>
        <Grid VerticalAlignment="Center" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Style="{StaticResource add-removeButton}" IsEnabled="True" Command="{Binding AddCommand}">+</Button>
            <Button Style="{StaticResource add-removeButton}" Grid.Row="1" 
                    Command="{Binding RemoveCommand}" Visibility="{Binding ButtonRemoveVis}">-</Button>
        </Grid>
        <ListView Name="todoList" Grid.Row="1" Grid.ColumnSpan="2" Margin="10,5,10,5" 
                  ItemsSource="{Binding ToDo}" SelectionMode="Multiple" SelectionChanged="todoList_SelectionChanged"></ListView>
    </Grid>
</Window>
