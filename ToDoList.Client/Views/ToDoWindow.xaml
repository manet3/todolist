<Window x:Class="ToDoList.Client.ToDoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:ToDoList.Client.Controls"
        xmlns:attached="clr-namespace:ToDoList.Client.Views.Attached"
        mc:Ignorable="d"
        Title="ToDo" 
        Height="400" Width="300"
        DataContext="{Binding ToDoViewModel, Source={StaticResource ToDoViewModelResolver}}"
        attached:WindowAttached.LoadedCommand="{Binding StartCommand}"
        attached:WindowAttached.ClosingCommand="{Binding ClosingCommand}">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border BorderBrush="Gray" 
                                BorderThickness="3"
                                Background="White"
                                CornerRadius="5">
                            <DockPanel>
                                <Border DockPanel.Dock="Top" CornerRadius="5" 
                                            MouseLeftButtonDown="Border_MouseLeftButtonDown" 
                                            Background="White">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Name="btClose" 
                                                    Style="{StaticResource closeButton}" 
                                                    Click="BtCloseClick"/>
                                    </StackPanel>
                                </Border>
                                <Line DockPanel.Dock="Top" 
                                          Fill="Transparent" 
                                          X2="{TemplateBinding Property=Width}" 
                                          Stroke="Gray" StrokeThickness="5"/>
                                <AdornerDecorator DockPanel.Dock="Bottom">
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Grid Name="mainGrid"
          Background="White" 
          Focusable="True" 
          MouseDown="GridFocus" >
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5"/>
        </Grid.ColumnDefinitions>

        <TextBox Grid.Column="1" Margin="10,5,5,5" 
                 Text="{Binding NewItemText, UpdateSourceTrigger=PropertyChanged}"/>

        <Grid VerticalAlignment="Center" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="+" 
                    Style="{StaticResource add-removeButton}" 
                    Command="{Binding AddCommand}"/>

            <Button Content="-"
                    Grid.Row="1" 
                    CommandParameter="{Binding SelectedItems, ElementName=todoList}"
                    Command="{Binding RemoveCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource add-removeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=todoList}"
                                         Value="0">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <controls:ErrorShowUp ErrorText ="{Binding TemporalNotificationMessage}"/>
            <controls:ErrorShowUp Grid.Row="1" ErrorText ="{Binding ErrorMessage}"/>
        </Grid>

        <TabControl ItemsSource="{Binding ToDoLists}"
                    SelectedValue="{Binding ActiveToDoList}"
                    Grid.Row="2" 
                    Grid.Column="1"
                    Grid.ColumnSpan="2" 
                    Margin="0,5,0,5" >

            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid>
                                    <Border Name="ItemBorder" BorderThickness="3" BorderBrush="Gray" Background="LightGray" CornerRadius="3">
                                        <ContentPresenter Margin="2,2,2,2" DataContext="{TemplateBinding DataContext}" Content="{Binding Name}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ItemBorder" Property="Background" Value="White"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ListView SelectionMode="Multiple" ItemsSource="{Binding}">
                        <ListView.ItemTemplate>
                            <DataTemplate >
                                <controls:ToDoItemControl ItemModel ="{Binding}"
                                    ItemChangedCommand="{Binding DataContext.ChangeCommand,
                                    RelativeSource={RelativeSource AncestorType=Window}}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DataTemplate>
            </TabControl.ContentTemplate>

            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <StackPanel Orientation="Horizontal">
                            <TabPanel IsItemsHost="True" MaxWidth="280"/>

                            <Button Name="ListAddButton" Content="+"
                                    Command="{Binding DataContext.AddListCommand,
                                RelativeSource={RelativeSource AncestorType=Window}}"
                                    Style="{StaticResource add-removeButton}"
                                    HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </StackPanel>

                        <ContentPresenter Grid.Row="1"
                                          x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent"/>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>

        </TabControl>

        <controls:Loader Background="Transparent" 
                         ActiveState="{Binding LoaderState}" 
                         RestartCommand="{Binding SyncRetryCommand}"
                         Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"
                         VerticalAlignment="Top" Margin="0,0,0,5"/>
    </Grid>
</Window>
