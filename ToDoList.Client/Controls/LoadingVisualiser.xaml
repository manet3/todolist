<UserControl x:Class="ToDoList.Client.Controls.LoadingVisualiser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Name="loadingControl"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveState, RelativeSource={RelativeSource Self}}" 
                             Value="None">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    
    <UserControl.Resources>
        <Storyboard x:Key="ellipseMove" RepeatBehavior="Forever">
            <DoubleAnimation From="0" To="104"
                             Storyboard.TargetProperty ="(Canvas.Left)"
                             DecelerationRatio="0.4" 
                             Duration="0:0:2.3"/>

            <DoubleAnimation From="0" To="1" 
                             AutoReverse="True"
                             Storyboard.TargetProperty ="Opacity"
                             Duration="0:0:1.5"/>
            
            <DoubleAnimation To="7" 
                             AutoReverse="True"
                             Storyboard.TargetProperty ="Height"
                             Duration="0:0:1.5"/>

            <DoubleAnimation To="200"
                             IsAdditive="True"
                             BeginTime="0:0:2"
                             Storyboard.TargetProperty ="(Canvas.Left)"
                             AccelerationRatio="1" 
                             Duration="0:0:1"/>
        </Storyboard>

        <Style TargetType="Ellipse">
            <Setter Property="Height" Value="2"></Setter>
            <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Fill" Value="DimGray"></Setter>
            <Setter Property="Canvas.Top" Value="2.5"></Setter>
            <Style.Triggers>
                <!--No other way of binding can be used-->
                <DataTrigger Binding="{Binding ActiveState, 
                    RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                     Value="Started">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ellipseMove}"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <ItemsControl ItemsSource="{Binding Particles, 
        RelativeSource={RelativeSource AncestorType=UserControl}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Width="200" Height="10"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <StackPanel Orientation="Horizontal">
            <Button Foreground="SlateGray" 
                Command="{Binding RestartButtonPressed, 
            RelativeSource={RelativeSource AncestorType=UserControl}}" 
                FontWeight="SemiBold" 
                RenderTransformOrigin="0.5,0.5"
                Height="22" Width="60"
                HorizontalAlignment="Left">Try again
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Name="btBorder" Background="White" 
                            CornerRadius="3" 
                            BorderBrush="DimGray"
                            Visibility="Collapsed"
                            BorderThickness="2">
                            <ContentPresenter Margin="2,0,2,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btBorder" Property="Background" Value="LightGray"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="btBorder" Property="Background" Value="Gray"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"></ScaleTransform>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <DataTrigger Binding="{Binding ActiveState, 
                    RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                     Value="Failed">
                                <Setter TargetName="btBorder" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            
            <ToggleButton
                FontSize="15"
                FontWeight="SemiBold"
                Foreground="Gray"
                Margin="5,0,0,0"
                IsChecked="{Binding AutoRestart, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="btBorder" BorderBrush="Gray" 
                                BorderThickness="2" Background="White" Height="Auto" Width="Auto">
                            <ContentPresenter Name="btContent" 
                                              ContentStringFormat="Restast in {0} sec (Cancel)"
                                              Content="{Binding RetryAfterSec, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter TargetName="btBorder" Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="btContent" Property="ContentStringFormat" Value="{x:Null}"/>
                                <Setter TargetName="btContent" Property="Content" Value="Auto sync stopped"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Style.Triggers>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RetryAfterSec, 
                                        RelativeSource={RelativeSource AncestorType=UserControl}}" Value="0"/>
                                    <Condition Binding="{Binding AutoRestartAllowed, 
                                        RelativeSource={RelativeSource AncestorType=UserControl}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding AutoRestartAllowed, 
                                        RelativeSource={RelativeSource AncestorType=UserControl}}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </StackPanel>
    </Grid>
</UserControl>
